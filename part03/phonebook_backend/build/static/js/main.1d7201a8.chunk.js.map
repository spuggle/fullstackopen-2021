{"version":3,"sources":["services/entries.js","components/PersonForm.js","components/People.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","entry","post","id","updatedEntry","put","delete","FormInput","text","value","handleChange","onChange","PersonForm","handleClick","handleNameChange","handleNumberChange","newName","newNumber","type","onClick","People","records","handleRemove","map","record","name","number","Filter","Notification","className","defaultNotification","generateNotification","App","useState","phoneEntries","setPhoneEntries","setNewName","setNewNumber","filterText","setFilterText","notification","setNotification","useEffect","setTimeout","filteredRecords","filter","phoneEntry","toLowerCase","includes","entryService","entries","event","target","preventDefault","existingEntry","find","person","window","confirm","catch","error","status","addedEntry","concat","finally","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d7201a8.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"/api/persons\";\n\nconst getAll = () => axios\n  .get(baseURL)\n  .then(response => response.data);\n\nconst add = entry => axios\n  .post(baseURL, entry)\n  .then(response => response.data);\n\nconst update = (id, updatedEntry) => axios\n  .put(`${baseURL}/${id}`, updatedEntry)\n  .then(response => response.data);\n\nconst remove = id => axios.delete(`${baseURL}/${id}`);\n\nexport default { getAll, add, update, remove };","const FormInput = ({ text, value, handleChange }) => (\n  <div>\n    {text}: <input value={value} onChange={handleChange} />\n  </div>\n);\n\nconst PersonForm = ({ handleClick, handleNameChange, handleNumberChange, newName, newNumber }) => {\n  return <form>\n    <FormInput text=\"Name\" value={newName} handleChange={handleNameChange} />\n    <FormInput text=\"Phone\" value={newNumber} handleChange={handleNumberChange} />\n    <div>\n      <button type=\"submit\" onClick={handleClick}>Add</button>\n    </div>\n  </form>\n};\n\nexport default PersonForm;","const People = ({ records, handleRemove }) => records\n  .map(record => (\n    <div key={record.id}>\n      {record.name} {record.number} <button onClick={() => handleRemove(record.id)}>Delete</button>\n    </div>\n  ));\n\nexport default People;","const Filter = ({ value, handleChange }) => (\n  <div>Filter shown with: <input value={value} onChange={handleChange} /></div>\n);\n\nexport default Filter;","const Notification = ({ text, type }) => (\n  <div id=\"notification\" className={type}>\n    {text}\n  </div>\n);\n\nexport default Notification;","import React, { useState, useEffect } from \"react\";\nimport entryService from \"./services/entries\";\nimport PersonForm from \"./components/PersonForm\";\nimport People from \"./components/People\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\n\nconst defaultNotification = { text: \"\", type: \"none\" };\nconst generateNotification = (text, type = \"none\") => ({ text, type });\n\nconst App = () => {\n  const [ phoneEntries, setPhoneEntries ] = useState([]);\n  const [ newName, setNewName ] = useState(\"\");\n  const [ newNumber, setNewNumber ] = useState(\"\");\n  const [ filterText, setFilterText ] = useState(\"\");\n  const [ notification, setNotification ] = useState(defaultNotification);\n\n  useEffect(() => {\n    setTimeout(() => setNotification(defaultNotification), 2000);\n  }, [ notification.text ]);\n\n  const filteredRecords = filterText\n    ? phoneEntries.filter(phoneEntry => phoneEntry.name\n        .toLowerCase()\n        .includes(filterText.toLowerCase())\n      )\n    : phoneEntries;\n\n  useEffect(() => {\n    entryService\n      .getAll()\n      .then(entries => setPhoneEntries([ ...phoneEntries, ...entries ]));\n  }, []);\n\n  const addEntryToPhonebook = event => {\n    event.preventDefault();\n\n    const existingEntry = phoneEntries.find(person => person.name === newName);\n    if (existingEntry) {\n      const hasConfirmedReplacement = window.confirm(\n        `${newName} is already added to the phonebook. Replace the old number with the provided one?`\n      );\n\n      if (hasConfirmedReplacement) {\n        entryService\n          .update(existingEntry.id, { ...existingEntry, number: newNumber })\n          .then(updatedEntry => {\n            setPhoneEntries(\n              phoneEntries\n                .map(phoneEntry => phoneEntry.id === existingEntry.id ? updatedEntry : phoneEntry)\n            );\n\n            setNotification(\n              generateNotification(`Successfully updated ${newName}'s number`, \"success\")\n            );\n          })\n          .catch(error => {\n            setNotification(\n              generateNotification(error.response.data.error, \"error\")\n            );\n\n            if (error.response.status === 404) {\n              setPhoneEntries(\n                phoneEntries.filter(phoneEntry => phoneEntry.id !== existingEntry.id)\n              );\n            }\n          });\n      }\n    } else {\n      const newEntry = {\n        name: newName,\n        number: newNumber\n      };\n\n      entryService\n        .add(newEntry)\n        .then(addedEntry => {\n          setPhoneEntries(phoneEntries.concat(addedEntry))\n          setNotification(\n            generateNotification(`Successfully added ${newName}`, \"success\")\n          );\n        })\n        .catch(error => setNotification(\n          generateNotification(error.response.data.error, \"error\")\n        ));\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const removeEntryFromPhonebook = id => {\n    entryService\n      .remove(id)\n      .catch(error => setNotification(\n        generateNotification(error.response.data.error, \"error\")\n      ))\n      .finally(() => setPhoneEntries(phoneEntries.filter(phoneEntry => phoneEntry.id !== id)));\n  }\n\n  const handleNameChange = event => setNewName(event.target.value);\n  const handleNumberChange = event => setNewNumber(event.target.value);\n  const handleFilterChange = event => setFilterText(event.target.value);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification text={notification.text} type={notification.type} />\n      <Filter value={filterText} handleChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        handleClick={addEntryToPhonebook}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n        newName={newName} newNumber={newNumber}\n      />\n      <h3>Numbers</h3>\n      <People records={filteredRecords} handleRemove={removeEntryFromPhonebook} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}